/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.Community;
import model.DoctorDirectory;
import model.Hospital;
import model.HospitalDirectory;
import model.PatientDirectory;
import model.PersonDirectory;
import model.SystemClass;

/**
 *
 * @author sejal
 */
public class HospitalPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalPanel
     */
    JPanel workArea;
    PersonDirectory person; 
    PatientDirectory ptDirectory;
    DoctorDirectory docDirectory;
    HospitalDirectory hospDirectory;
    City commDirectory;
    SystemClass sys;
    public HospitalPanel(JPanel workArea,PersonDirectory person, PatientDirectory ptDirectory,DoctorDirectory docDirectory, 
                            HospitalDirectory hospDirectory, City commDirectory,SystemClass sys) {
        initComponents();
         this.workArea = workArea;
        this.person = person;
        this.ptDirectory = ptDirectory;
        this.docDirectory = docDirectory;
        this.hospDirectory = hospDirectory;
        this.commDirectory = commDirectory;
        this.sys = sys;
        
        ArrayList<Community> commArray = commDirectory.commDirectory;
        if(!commArray.isEmpty()){
            for(int k = 0; k < commArray.size(); k++){
                cmbComm.addItem(commArray.get(k).toString());
            }
        }
        //populateTabComm();
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabHosp = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtHospname = new javax.swing.JTextField();
        cmbRate = new javax.swing.JComboBox<>();
        cmbComm = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(204, 204, 204));

        tabHosp.setBackground(new java.awt.Color(204, 204, 204));
        tabHosp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "City", "Community", "Hospital Name", "Ratings"
            }
        ));
        jScrollPane1.setViewportView(tabHosp);

        jLabel1.setText("Hospital Name:");

        jLabel2.setText("Ratings:");

        jLabel3.setText("Community");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        cmbRate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1", "2", "3", "4", "5" }));

        cmbComm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Allston", "Park st", "Social st" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel2))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtHospname, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbComm, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbRate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(144, 144, 144)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdd)
                            .addComponent(btnView))
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDelete)
                            .addComponent(btnUpdate))))
                .addGap(6, 6, 6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtHospname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnDelete))
                .addContainerGap(37, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        String hname = txtHospname.getText();
        int comm = cmbComm.getSelectedIndex();
        String ratechk = cmbRate.getSelectedItem().toString();
        
        
        
        
        if(hname.isEmpty() || comm==0 || ratechk.isEmpty()){
                JOptionPane.showMessageDialog(null, "Fill Details");
        }else{  
                ArrayList<Community> commArray = commDirectory.commDirectory;
                Community selectedComm = commArray.get(cmbComm.getSelectedIndex()-1);
                int ratings = Integer.parseInt(cmbRate.getSelectedItem().toString());  
                Hospital hosp = hospDirectory.addNewHospital(selectedComm, hname, ratings);
                
                
                hosp.setHname(hname);
                hosp.setCommunity(selectedComm);
                hosp.setRatings(ratings);
                //populateTabComm();
                JOptionPane.showMessageDialog(null, "Added!");
                
                txtHospname.setText(" ");
                cmbComm.setSelectedIndex(0);
                cmbComm.setSelectedIndex(0);
    }//GEN-LAST:event_btnViewActionPerformed
    }
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String hname = txtHospname.getText();
        int comm = cmbComm.getSelectedIndex();
        
        String ratechk = cmbRate.getSelectedItem().toString();
       
        
        if(hname.isEmpty() || comm==0 || ratechk.isEmpty()){
                JOptionPane.showMessageDialog(null, "Fill Details");
        }else{
                ArrayList<Community> commArray = commDirectory.commDirectory;
                Community selectedComm = commArray.get(cmbComm.getSelectedIndex()-1);
                int ratings = Integer.parseInt(cmbRate.getSelectedItem().toString());
                Hospital hosp = hospDirectory.addNewHospital(selectedComm, hname, ratings);
                
                
                hosp.setHname(hname);
                hosp.setCommunity(selectedComm);
                hosp.setRatings(ratings);
                //populateTabComm();
                JOptionPane.showMessageDialog(null, "Updated!");
                
                txtHospname.setText(" ");
                cmbComm.setSelectedIndex(0);
                cmbComm.setSelectedIndex(0);
        }
                                      
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
                int selectedRowIndex = tabHosp.getSelectedRow();
        
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        }
        if(selectedRowIndex>=0){
            
            
            DefaultTableModel model = (DefaultTableModel) tabHosp.getModel();
            Hospital hosp = (Hospital) model.getValueAt(selectedRowIndex, 0);
        
            txtHospname.setText(hosp.hname);
            cmbComm.setSelectedItem(hosp.getCommunity().comm);
            cmbRate.setSelectedItem(hosp.ratings);
            
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tabHosp.getModel();
        
        model.setRowCount(0);
        for(Hospital ho : hospDirectory.getHospDirectory()){
            Object[] row = new Object[4];
            row[0] = ho.hname;
            row[1] = ho.getCommunity().getComm();
            row[2] = ho.getCommunity().getCity();
            row[3] = ho.ratings;
             
            model.addRow(row);
        }
    }//GEN-LAST:event_btnAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> cmbComm;
    private javax.swing.JComboBox<String> cmbRate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabHosp;
    private javax.swing.JTextField txtHospname;
    // End of variables declaration//GEN-END:variables

  // private void populateTabComm() {
    //    throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    //}

}
    

